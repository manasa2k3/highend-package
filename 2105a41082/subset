def find_set(arr, n, target, current_sum, start, subset, res):
    if current_sum == target:
        res.append(subset[:])
        return
    if current_sum > target or start == n:
        return
    for i in range(start, n):
        subset.append(arr[i])
        current_sum += arr[i]
        find_set(arr, n, target, current_sum, i + 1, subset, res)
        current_sum -= subset.pop()

def find(arr, target):
    n = len(arr)
    res = []
    find_set(arr, n, target, 0, 0, [], res)
    return res

a = [8, 9, 6, 5, 4, 3, 26, 2]
sum_input = int(input("Enter the target: "))

if sum_input > sum(a) or sum_input < min(a):
    print("Impossible")
elif sum_input == sum(a):
    print("Only one set is possible, i.e.,", a)
else:
    result = find(a, sum_input)
    if not result:
        print("No subsets found with the given target.")
    else:
        print("Subsets that sum up to the target:")
        for subset in result:
            print(subset)
